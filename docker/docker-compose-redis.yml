version: "3.8"

services:
# Redis
  stun_turn_redis:
    build:
      context: ./redis
    container_name: stun_turn_redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
    env_file: 
      - redis/redis.env
    networks:
      - backend

  signalling_server:
    build:
      context: ./signalling_server
    image: signalling_server
    container_name: signalling_server
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD
      - PORT
    networks:
      - backend

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    depends_on:
      - signalling_server
    networks:
      - frontend
      - backend

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email onlineservices@famzzie.com --agree-tos --no-eff-email --staging -d stun.famzzie.com -d turn.famzzie.com

# Coturn
  coturn:
    build:
      context: ./coturn
    container_name: coturn
    restart: always
    volumes:
      - ${PWD}/coturn/turnserver.conf:/etc/turnserver.conf
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    ports:
## STUN/TURN
      - "3478:3478"
      - "3478:3478/udp"
      - "3479:3479"
      - "3479:3479/udp"
#      - "80:80"
#      - "80:80/udp"
## STUN/TURN SSL
      - "5349:5349"
      - "5349:5349/udp"
      - "5350:5350"
      - "5350:5350/udp"
#      - "443:443"
#      - "443:443/udp"
# Relay Ports
#      - "49152-65535:49152-65535"
#      - "49152-65535:49152-65535/udp"
    networks:
      - frontend
      - backend
    depends_on:
      - redis
      - signalling_server
    env_file:
      - coturn/coturn.env
# DB
      - redis/redis.env
volumes:
  redis-data:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/bfamz/coturn/docker/public/
      o: bind
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/bfamz/coturn/docker/dhparam/
      o: bind

networks:
  frontend:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.238.0/24
  backend:
    internal: true #Restrict external access to the network
